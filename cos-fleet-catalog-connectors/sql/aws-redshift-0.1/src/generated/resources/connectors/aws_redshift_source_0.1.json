{
  "channels" : {
    "stable" : {
      "shard_metadata" : {
        "connector_revision" : "15",
        "connector_type" : "source",
        "connector_image" : "quay.io/rhoas/cos-connector-aws-redshift:0.1.15",
        "operators" : [ {
          "type" : "camel-connector-operator",
          "version" : "[1.0.0,2.0.0)"
        } ],
        "kamelets" : {
          "adapter" : {
            "name" : "aws-redshift-source",
            "prefix" : "sql"
          },
          "kafka" : {
            "name" : "cos-kafka-sink",
            "prefix" : "kafka"
          },
          "processors" : {
            "log" : "cos-log-action",
            "fault" : "cos-fault-action"
          }
        },
        "annotations" : {
          "trait.camel.apache.org/container.request-cpu" : "0.20",
          "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
        },
        "consumes" : "application/json",
        "produces" : "application/json"
      }
    }
  },
  "connector_type" : {
    "id" : "aws_redshift_source_0.1",
    "kind" : "ConnectorType",
    "icon_href" : "TODO",
    "name" : "AWS Redshift Source",
    "description" : "AWS Redshift Source",
    "version" : "0.1",
    "labels" : [ "source" ],
    "capabilities" : [ "data_shape", "error_handler", "processors" ],
    "channels" : [ "stable" ],
    "schema" : {
      "type" : "object",
      "additionalProperties" : false,
      "required" : [ "sql_server_name", "sql_username", "sql_password", "sql_query", "sql_database_name", "kafka_topic" ],
      "properties" : {
        "sql_server_name" : {
          "title" : "Server Name",
          "description" : "Server Name for the data source",
          "type" : "string",
          "example" : "localhost"
        },
        "sql_server_port" : {
          "title" : "Server Port",
          "description" : "Server Port for the data source",
          "type" : "string",
          "default" : 5439
        },
        "sql_username" : {
          "title" : "Username",
          "description" : "The username to use for accessing a secured AWS Redshift Database",
          "type" : "string",
          "x-group" : "credentials"
        },
        "sql_password" : {
          "title" : "Password",
          "x-group" : "credentials",
          "oneOf" : [ {
            "title" : "Password",
            "description" : "The password to use for accessing a secured AWS Redshift Database",
            "type" : "string",
            "format" : "password"
          }, {
            "description" : "An opaque reference to the sql_password",
            "type" : "object",
            "properties" : { }
          } ]
        },
        "sql_query" : {
          "title" : "Query",
          "description" : "The Query to execute against the AWS Redshift Database",
          "type" : "string",
          "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
        },
        "sql_database_name" : {
          "title" : "Database Name",
          "description" : "The Database Name we are pointing",
          "type" : "string"
        },
        "sql_consumed_query" : {
          "title" : "Consumed Query",
          "description" : "A query to run on a tuple consumed",
          "type" : "string",
          "example" : "DELETE FROM accounts where user_id = :#user_id"
        },
        "kafka_topic" : {
          "title" : "Topic Names",
          "description" : "Comma separated list of Kafka topic names",
          "type" : "string"
        },
        "processors" : {
          "type" : "array",
          "items" : {
            "oneOf" : [ {
              "type" : "object",
              "required" : [ "log" ],
              "properties" : {
                "log" : {
                  "$ref" : "#/$defs/processors/log"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "fault" ],
              "properties" : {
                "fault" : {
                  "$ref" : "#/$defs/processors/fault"
                }
              }
            } ]
          }
        },
        "data_shape" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "produces" : {
              "$ref" : "#/$defs/data_shape/produces"
            }
          }
        },
        "error_handler" : {
          "type" : "object",
          "oneOf" : [ {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "dead_letter_queue" ],
            "properties" : {
              "dead_letter_queue" : {
                "$ref" : "#/$defs/error_handler/dead_letter_queue"
              }
            }
          }, {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "log" ],
            "properties" : {
              "log" : {
                "$ref" : "#/$defs/error_handler/log"
              }
            }
          }, {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "stop" ],
            "properties" : {
              "stop" : {
                "$ref" : "#/$defs/error_handler/stop"
              }
            }
          } ]
        }
      },
      "$defs" : {
        "processors" : {
          "log" : {
            "title" : "Log",
            "description" : "Log payload.",
            "type" : "object",
            "properties" : {
              "multiLine" : {
                "title" : "Multi Line",
                "description" : "Multi Line",
                "type" : "boolean",
                "default" : false
              },
              "showProperties" : {
                "title" : "Show Properties",
                "description" : "Show Properties",
                "type" : "boolean",
                "default" : false
              },
              "showHeaders" : {
                "title" : "Show Headers",
                "description" : "Show Headers",
                "type" : "boolean",
                "default" : false
              }
            }
          },
          "fault" : {
            "type" : "object",
            "title" : "Fault Injection",
            "description" : "Fail the exchange.",
            "required" : [ "exceptionType", "exceptionMessage" ],
            "properties" : {
              "exceptionType" : {
                "title" : "The Exception Type",
                "description" : "The Exception Type",
                "type" : "string"
              },
              "exceptionMessage" : {
                "title" : "The Exception Message",
                "description" : "The Exception Message",
                "type" : "string"
              }
            }
          }
        },
        "data_shape" : {
          "produces" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "format" ],
            "properties" : {
              "format" : {
                "type" : "string",
                "default" : "application/json",
                "enum" : [ "application/json" ]
              }
            }
          }
        },
        "error_handler" : {
          "dead_letter_queue" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "topic" ],
            "properties" : {
              "topic" : {
                "type" : "string",
                "title" : "Dead Letter Topic Name",
                "description" : "The name of the Kafka topic used as dead letter queue"
              }
            }
          },
          "log" : {
            "type" : "object",
            "additionalProperties" : false
          },
          "stop" : {
            "type" : "object",
            "additionalProperties" : false
          }
        }
      }
    }
  }
}