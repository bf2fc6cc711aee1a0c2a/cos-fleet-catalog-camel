{
  "channels" : {
    "stable" : {
      "shard_metadata" : {
        "connector_revision" : "17",
        "connector_type" : "sink",
        "connector_image" : "quay.io/rhoas/cos-connector-minio:0.1.17",
        "operators" : [ {
          "type" : "camel-connector-operator",
          "version" : "[1.0.0,2.0.0)"
        } ],
        "kamelets" : {
          "adapter" : {
            "name" : "minio-sink",
            "prefix" : "minio"
          },
          "kafka" : {
            "name" : "cos-kafka-source",
            "prefix" : "kafka"
          },
          "processors" : {
            "log" : "cos-log-action",
            "fault" : "cos-fault-action"
          }
        },
        "annotations" : {
          "trait.camel.apache.org/container.request-cpu" : "0.20",
          "trait.camel.apache.org/container.request-memory" : "256m",
          "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
        },
        "consumes" : "application/octet-stream",
        "produces" : "application/octet-stream",
        "error_handler_strategy" : "log"
      }
    }
  },
  "connector_type" : {
    "id" : "minio_sink_0.1",
    "kind" : "ConnectorType",
    "icon_href" : "TODO",
    "name" : "Minio Sink",
    "description" : "Minio Sink",
    "version" : "0.1",
    "labels" : [ "sink" ],
    "capabilities" : [ "data_shape", "error_handler", "processors" ],
    "channels" : [ "stable" ],
    "schema" : {
      "type" : "object",
      "additionalProperties" : false,
      "required" : [ "minio_bucket_name", "minio_access_key", "minio_secret_key", "minio_endpoint", "kafka_topic" ],
      "properties" : {
        "minio_bucket_name" : {
          "title" : "Bucket Name",
          "description" : "The Minio Bucket name",
          "type" : "string"
        },
        "minio_access_key" : {
          "title" : "Access Key",
          "x-group" : "credentials",
          "oneOf" : [ {
            "title" : "Access Key",
            "description" : "The access key obtained from Minio",
            "type" : "string",
            "format" : "password"
          }, {
            "description" : "An opaque reference to the minio_access_key",
            "type" : "object",
            "properties" : { }
          } ]
        },
        "minio_secret_key" : {
          "title" : "Secret Key",
          "x-group" : "credentials",
          "oneOf" : [ {
            "title" : "Secret Key",
            "description" : "The secret key obtained from Minio",
            "type" : "string",
            "format" : "password"
          }, {
            "description" : "An opaque reference to the minio_secret_key",
            "type" : "object",
            "properties" : { }
          } ]
        },
        "minio_endpoint" : {
          "title" : "Endpoint",
          "description" : "The Minio Endpoint, it can be an URL, domain name, IPv4 address or IPv6 address.",
          "type" : "string",
          "example" : "http://localhost:9000"
        },
        "minio_auto_create_bucket" : {
          "title" : "Autocreate Bucket",
          "description" : "Setting the autocreation of the Minio bucket bucketName.",
          "type" : "boolean",
          "default" : false
        },
        "kafka_topic" : {
          "title" : "Topic Names",
          "description" : "Comma separated list of Kafka topic names",
          "type" : "string"
        },
        "processors" : {
          "type" : "array",
          "items" : {
            "oneOf" : [ {
              "type" : "object",
              "required" : [ "log" ],
              "properties" : {
                "log" : {
                  "$ref" : "#/$defs/processors/log"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "fault" ],
              "properties" : {
                "fault" : {
                  "$ref" : "#/$defs/processors/fault"
                }
              }
            } ]
          }
        },
        "data_shape" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "consumes" : {
              "$ref" : "#/$defs/data_shape/consumes"
            }
          }
        },
        "error_handler" : {
          "type" : "object",
          "oneOf" : [ {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "dead_letter_queue" ],
            "properties" : {
              "dead_letter_queue" : {
                "$ref" : "#/$defs/error_handler/dead_letter_queue"
              }
            }
          }, {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "log" ],
            "properties" : {
              "log" : {
                "$ref" : "#/$defs/error_handler/log"
              }
            }
          }, {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "stop" ],
            "properties" : {
              "stop" : {
                "$ref" : "#/$defs/error_handler/stop"
              }
            }
          } ],
          "default" : {
            "log" : { }
          }
        }
      },
      "$defs" : {
        "processors" : {
          "log" : {
            "title" : "Log",
            "description" : "Log payload.",
            "type" : "object",
            "properties" : {
              "multiLine" : {
                "title" : "Multi Line",
                "description" : "Multi Line",
                "type" : "boolean",
                "default" : false
              },
              "showProperties" : {
                "title" : "Show Properties",
                "description" : "Show Properties",
                "type" : "boolean",
                "default" : false
              },
              "showHeaders" : {
                "title" : "Show Headers",
                "description" : "Show Headers",
                "type" : "boolean",
                "default" : false
              }
            }
          },
          "fault" : {
            "type" : "object",
            "title" : "Fault Injection",
            "description" : "Fail the exchange.",
            "required" : [ "exceptionType", "exceptionMessage" ],
            "properties" : {
              "exceptionType" : {
                "title" : "The Exception Type",
                "description" : "The Exception Type",
                "type" : "string"
              },
              "exceptionMessage" : {
                "title" : "The Exception Message",
                "description" : "The Exception Message",
                "type" : "string"
              }
            }
          }
        },
        "data_shape" : {
          "consumes" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "format" ],
            "properties" : {
              "format" : {
                "type" : "string",
                "default" : "application/octet-stream",
                "enum" : [ "application/octet-stream" ]
              }
            }
          }
        },
        "error_handler" : {
          "dead_letter_queue" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "topic" ],
            "properties" : {
              "topic" : {
                "type" : "string",
                "title" : "Dead Letter Topic Name",
                "description" : "The name of the Kafka topic used as dead letter queue"
              }
            }
          },
          "log" : {
            "type" : "object",
            "additionalProperties" : false
          },
          "stop" : {
            "type" : "object",
            "additionalProperties" : false
          }
        }
      }
    }
  }
}