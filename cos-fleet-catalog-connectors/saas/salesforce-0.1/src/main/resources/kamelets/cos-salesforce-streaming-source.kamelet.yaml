# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------
apiVersion: camel.apache.org/v1alpha1
kind: Kamelet
metadata:
  name: cos-salesforce-streaming-source
  annotations:
    camel.apache.org/provider: "Red Hat"
    camel.apache.org/kamelet.group: "saas"
    camel.apache.org/kamelet.version: "${cos.kamelets.version}"
  labels:
    camel.apache.org/kamelet.type: "source"
spec:
  definition:
    title: "Salesforce Source"
    description: |-
      Receive updates from Salesforce.
    required:
      - objectName
      - clientId
      - clientSecret
      - userName
      - password
    type: object
    properties:
      objectName:
        title: objectName
        description: The sObjectName
        type: string
      loginUrl:
        title: Login URL
        description: The Salesforce instance login URL
        type: string
        default: https://login.salesforce.com
      clientId:
        title: Consumer Key
        description: The Salesforce application consumer key
        type: string
        x-descriptors:
          - urn:camel:group:credentials
      clientSecret:
        title: Consumer Secret
        description: The Salesforce application consumer secret
        type: string
        format: password
        x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:password
          - urn:camel:group:credentials
      userName:
        title: Username
        description: The Salesforce username
        type: string
        x-descriptors:
          - urn:camel:group:credentials
      password:
        title: Password
        description: The Salesforce user password
        type: string
        format: password
        x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:password
          - urn:camel:group:credentials
  types:
    out:
      mediaType: application/json
  dependencies:
    - "camel:jackson"
    - "camel:salesforce"
    - "camel:kamelet"
  template:
    beans:
      - name: "sf"
        type: "#class:org.apache.camel.component.salesforce.SalesforceComponent"
        properties:
          clientId: "{{clientId}}"
          clientSecret: "{{clientSecret}}"
          userName: "{{userName}}"
          password: "{{password}}"
          loginUrl: "{{loginUrl:https://login.salesforce.com}}"
      - name: "schema-resolver"
        type: "#class:org.bf2.cos.connector.camel.salesforce.SalesforceSchemaResolver"
        properties:
          clientId: "{{clientId}}"
          clientSecret: "{{clientSecret}}"
          userName: "{{userName}}"
          password: "{{password}}"
          loginUrl: "{{loginUrl:https://login.salesforce.com}}"
    from:
      uri: "{{sf}}:{{env:CONNECTOR_DEPLOYMENT_ID}}"
      parameters:
        notifyForFields: "ALL"
        updateTopic: "true"
        notifyForOperationCreate: "true"
        notifyForOperationUpdate: "true"
        notifyForOperationDelete: "true"
        notifyForOperationUndelete: "true"
        sObjectQuery: "SELECT ID from {{objectName}}"
        defaultReplayId: "-1"
      steps:
        - setHeader:
            name: "sObjectName"
            constant: "{{objectName}}"
        - setHeader:
            name: "sObjectId"
            simple: "${body[Id]}"
        - setBody:
            simple: "${null}"
        - process:
            ref: "{{schema-resolver}}"
        - to:
            uri: "{{sf}}:getSObject"
            parameters:
              rawPayload: "true"
        - removeHeaders:
            pattern: "sObject*"
        - removeHeaders:
            pattern: "Sforce-*"
        - removeHeaders:
            pattern: "CamelSalesforce*"
        - removeHeaders:
            pattern: "CamelHttp*"
        - to: "kamelet:sink"
