name: Run Catalog Integration Tests
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  LANG: en_US.UTF-8
  MAVEN_OPTS: -Xmx3000m
  MAVEN_ARGS: -V -ntp -Dhttp.keepAlive=false -e
  CONTAINER_REPO: ttl.sh
  CONTAINER_ORG: ${{ github.run_id }}
  CONTAINER_PREFIX: ${{ github.run_number }}
  CONTAINER_TAG: 1h

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache m2 repo
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: "Build"
        run: |
          ./mvnw ${MAVEN_ARGS} clean install \
            -Dcos.connector.container.repository=${CONTAINER_REPO} \
            -Dcos.connector.container.organization=${CONTAINER_ORG} \
            -Dcos.connector.container.prefix=${CONTAINER_PREFIX} \
            -Dcos.connector.container.tag=${CONTAINER_TAG} \
            -Pcontainer-push

      - name: "Tar Maven Repo"
        shell: bash
        run: |
          tar -czf ${{ runner.temp }}/maven-repo.tgz -C ~ .m2/repository
          ls -lh ${{ runner.temp }}/maven-repo.tgz
          df -h /
      - name: "Persist Maven Repo"
        uses: actions/upload-artifact@v2
        with:
          name: maven-repo-${{ github.run_id }}
          path: ${{ runner.temp }}/maven-repo.tgz
          retention-days: 1

  aws:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: "Download Maven Repo"
        uses: actions/download-artifact@v2
        with:
          name: maven-repo-${{ github.run_id }}
          path: ..
      - name: "Extract Maven Repo"
        shell: bash
        run: |
          df -h /
          tar -xzf ../maven-repo.tgz -C ~
          df -h /
      - name: "Run"
        run: |
          ./mvnw ${MAVEN_ARGS} clean install \
            -Dcos.connector.container.repository=${CONTAINER_REPO} \
            -Dcos.connector.container.organization=${CONTAINER_ORG} \
            -Dcos.connector.container.prefix=${CONTAINER_PREFIX} \
            -Dcos.connector.container.tag=${CONTAINER_TAG} \
            -Pcontainer-test \
            -pl :cos-connector-aws-it

  messaging:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: "Download Maven Repo"
        uses: actions/download-artifact@v2
        with:
          name: maven-repo-${{ github.run_id }}
          path: ..
      - name: "Extract Maven Repo"
        shell: bash
        run: |
          df -h /
          tar -xzf ../maven-repo.tgz -C ~
          df -h /
      - name: "Run"
        run: |
          ./mvnw ${MAVEN_ARGS} clean install \
            -Dcos.connector.container.repository=${CONTAINER_REPO} \
            -Dcos.connector.container.organization=${CONTAINER_ORG} \
            -Dcos.connector.container.prefix=${CONTAINER_PREFIX} \
            -Dcos.connector.container.tag=${CONTAINER_TAG} \
            -Dlog.enabled=true \
            -Pcontainer-test \
            -pl :cos-connector-jms-amqp-it

  nosql:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: "Download Maven Repo"
        uses: actions/download-artifact@v2
        with:
          name: maven-repo-${{ github.run_id }}
          path: ..
      - name: "Extract Maven Repo"
        shell: bash
        run: |
          df -h /
          tar -xzf ../maven-repo.tgz -C ~
          df -h /
      - name: "Run"
        run: |
          ./mvnw ${MAVEN_ARGS} clean install \
            -Dcos.connector.container.repository=${CONTAINER_REPO} \
            -Dcos.connector.container.organization=${CONTAINER_ORG} \
            -Dcos.connector.container.prefix=${CONTAINER_PREFIX} \
            -Dcos.connector.container.tag=${CONTAINER_TAG} \
            -Dlog.enabled=true \
            -Pcontainer-test \
            -pl :cos-connector-mongodb-it

  sql:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: "Download Maven Repo"
        uses: actions/download-artifact@v2
        with:
          name: maven-repo-${{ github.run_id }}
          path: ..
      - name: "Extract Maven Repo"
        shell: bash
        run: |
          df -h /
          tar -xzf ../maven-repo.tgz -C ~
          df -h /
      - name: "Run"
        run: |
          ./mvnw ${MAVEN_ARGS} clean install \
            -Dcos.connector.container.repository=${CONTAINER_REPO} \
            -Dcos.connector.container.organization=${CONTAINER_ORG} \
            -Dcos.connector.container.prefix=${CONTAINER_PREFIX} \
            -Dcos.connector.container.tag=${CONTAINER_TAG} \
            -Dlog.enabled=true \
            -Pcontainer-test \
            -pl :cos-connector-mariadb-it\
            -pl :cos-connector-mysql-it \
            -pl :cos-connector-postgresql-it\
            -pl :cos-connector-sqlserver-it