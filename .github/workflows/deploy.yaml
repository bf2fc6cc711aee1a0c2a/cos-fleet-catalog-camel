name: Build and Deploy Catalog

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  LANG: en_US.UTF-8
  MAVEN_OPTS: -Xmx3000m
  MAVEN_ARGS: -V -ntp -Dhttp.keepAlive=false -e

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build Project
        run: |
          ./mvnw ${MAVEN_ARGS} clean install -U
      - name: Check for uncommitted changes
        id: check-changes
        uses: mskri/check-uncommitted-changes-action@v1.0.1
      - name: Evaluate if there are changes
        if: steps.check-changes.outputs.outcome == failure()
        run: echo "There are uncommitted changes"
  images:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build Images
        run: |
          ./mvnw ${MAVEN_ARGS} clean install -U \
            -Dquarkus.container-image.username=${{ secrets.QUAY_MCI_USR }} \
            -Dquarkus.container-image.password=${{ secrets.QUAY_MCI_PWD }} \
            -Dquarkus.container-image.registry=quay.io \
            -Dquarkus.container-image.group=rhoas \
            -Pcontainer-push
  deploy:
    runs-on: ubuntu-latest
    needs: images
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "mirror"
          skip_cache: "true"
          oc: "latest"
      - name: Verify OpenShift CLI tools
        run: |
          oc version
      - name: Log in and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.K8S_CLUSTER_DEV }}
          openshift_token: ${{ secrets.K8S_CLUSTER_DEV_TOKEN }}
          insecure_skip_tls_verify: false
          namespace: ${{ secrets.K8S_CLUSTER_DEV_NAMESPACE }}
      - name: Deploy Catalog
        run: |
          CONNECTORS_DIR=etc/connectors
          CONNECTORS_NS=${{ secrets.K8S_CLUSTER_DEV_NAMESPACE }}

          for D in "${CONNECTORS_DIR}"/*; do
            CM_NAME=$(basename "${D}")

            echo "Creating configmap: ${CM_NAME} in namespace ${CONNECTORS_NS}"

            oc create configmap "${CM_NAME}" \
              --namespace ${CONNECTORS_NS} \
              --from-file="${CONNECTORS_DIR}/${CM_NAME}/" \
              --dry-run=client \
              -o yaml | kubectl replace -f -
          done
      - name: Restart FleetManager
        run: |
          oc rollout restart deployment/cos-fleet-manager --namespace ${{ secrets.K8S_CLUSTER_DEV_NAMESPACE }}
