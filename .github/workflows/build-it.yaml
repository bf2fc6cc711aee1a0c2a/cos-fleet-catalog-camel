name: Build IT

on:
  workflow_call:
    inputs:
      modules:
        required: true
        type: string
      containerRepo:
        required: true
        type: string
      containerOrg:
        required: true
        type: string
      containerTag:
        required: true
        type: string

env:
  LANG: en_US.UTF-8
  MAVEN_OPTS: -Xmx3000m
  MAVEN_ARGS: -V -ntp -Dhttp.keepAlive=false -e

jobs:
  build-it:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: "Download Maven Repo"
        uses: actions/download-artifact@v3
        with:
          name: maven-repo-${{ github.run_id }}
          path: ..
      - name: "Extract Maven Repo"
        shell: bash
        run: |
          df -h /
          tar -xzf ../maven-repo.tgz -C ~
          df -h /
      - name: "Run"
        env:
          SF_CLIENT_ID: ${{ secrets.SF_CLIENT_ID }}
          SF_CLIENT_SECRET: ${{ secrets.SF_CLIENT_SECRET }}
          SF_CLIENT_USERNAME: ${{ secrets.SF_CLIENT_USERNAME }}
          SF_CLIENT_PASSWORD: ${{ secrets.SF_CLIENT_PASSWORD }}
          AZURE_EVENTHUB_NAME: ${{ secrets.AZURE_EVENTHUB_NAME }}
          AZURE_NAMESPACE_NAME: ${{ secrets.AZURE_NAMESPACE_NAME }}
          AZURE_SHARED_ACCESS_KEY: ${{ secrets.AZURE_SHARED_ACCESS_KEY }}
          AZURE_SHARED_ACCESS_NAME: ${{ secrets.AZURE_SHARED_ACCESS_NAME }}
        run: |
          ./mvnw ${MAVEN_ARGS} clean install \
            -Dcos.connector.container.repository=${{ inputs.containerRepo }} \
            -Dcos.connector.container.organization=${{ inputs.containerOrg }}  \
            -Dcos.connector.container.tag=${{ inputs.containerTag }} \
            -Dcos.connector.container.tag.it=${{ inputs.containerTag }} \
            -Dlog.enabled=true \
            -Pcontainer-build \
            -Pcontainer-test \
            -pl ${{ inputs.modules }} \
            --amd