apiVersion: camel.apache.org/v1alpha1
kind: Kamelet
metadata:
  name: cos-aws-cloudwatch-sink
  annotations:
    camel.apache.org/provider: "Red Hat"
    camel.apache.org/kamelet.version: "${cos.kamelets.version}"
  labels:
    camel.apache.org/kamelet.type: "sink"
spec:
  definition:
    title: "AWS CloudWatch Metrics Sink"
    description: |-
      Send data to Amazon CloudWatch metrics.

      The basic authentication method for the AWS CloudWatch metrics service is to specify an access key and a secret key. These parameters are optional because the Kamelet provides a default credentials provider.
      
      If you use the default credentials provider, the CloudWatch client loads the credentials through this provider and doesn't use the basic authentication method.
      
      You can set the following properties in the header:

      `metric-name` / `ce-metricname` for the metric name.
      `metric-value` / `ce-metricvalue` for the metric value.
      `metric-unit` / `ce-metricunit` for the metric unit.
      `metric-timestamp` / `ce-metrictimestamp` for the metric timestamp.
      `metric-dimension-name` / `ce-metricdimensionname` for the dimension name.
      `metric-dimension-value` / `ce-metricdimensionvalue` for the dimension value.
    required:
      - accessKey
      - secretKey
      - cwNamespace
      - region
    type: object
    properties:
      cwNamespace:
        title: Cloud Watch Namespace
        description: The CloudWatch metric namespace.
        type: string
      accessKey:
        title: Access Key
        description: The access key obtained from AWS.
        type: string
        format: password
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:password
        - urn:camel:group:credentials
      secretKey:
        title: Secret Key
        description: The secret key obtained from AWS.
        type: string
        format: password
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:password
        - urn:camel:group:credentials
      region:
        title: AWS Region
        description: The AWS region to access.
        type: string
        enum: ["ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global"]
      uriEndpointOverride:
        title: Overwrite Endpoint URI
        description: The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.
        type: string
      overrideEndpoint:
        title: Endpoint Overwrite
        description: Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.
        type: boolean
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:checkbox'
        default: false
  dependencies:
    - "camel:core"
    - "camel:aws2-cw"
    - "camel:kamelet"
  template:
    from:
      uri: kamelet:source
      steps:
      - choice:
          when:
          - simple: "${header[metric-name]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricName
                simple: "${header[metric-name]}"
          - simple: "${header[ce-metricname]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricName
                simple: "${header[ce-metricname]}"
      - choice:
          when:
          - simple: "${header[metric-value]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricValue
                simple: "${header[metric-value]}"
          - simple: "${header[ce-metricvalue]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricValue
                simple: "${header[ce-metricvalue]}"
      - choice:
          when:
          - simple: "${header[metric-unit]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricUnit
                simple: "${header[metric-unit]}"
          - simple: "${header[ce-metricunit]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricUnit
                simple: "${header[ce-metricunit]}"
      - choice:
          when:
          - simple: "${header[metric-timestamp]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricTimestamp
                simple: "${header[metric-timestamp]}"
          - simple: "${header[ce-metrictimestamp]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricTimestamp
                simple: "${header[ce-metrictimestamp]}"
      - choice:
          when:
          - simple: "${header[metric-dimension-name]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricDimensionName
                simple: "${header[metric-dimension-name]}"
          - simple: "${header[ce-metricdimensionname]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricDimensionName
                simple: "${header[ce-metricdimensionname]}"
      - choice:
          when:
          - simple: "${header[metric-dimension-value]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricDimensionValue
                simple: "${header[metric-dimension-value]}"
          - simple: "${header[ce-metricdimensionvalue]}"
            steps:
            - set-header:
                name: CamelAwsCwMetricDimensionValue
                simple: "${header[ce-metricdimensionvalue]}"
      - to:
          uri: "aws2-cw:{{cwNamespace}}"
          parameters:
            secretKey: "{{?secretKey}}"
            accessKey: "{{?accessKey}}"
            region: "{{region}}"
            useDefaultCredentialsProvider: "false"
            uriEndpointOverride: "{{?uriEndpointOverride}}"
            overrideEndpoint: "{{overrideEndpoint}}"
