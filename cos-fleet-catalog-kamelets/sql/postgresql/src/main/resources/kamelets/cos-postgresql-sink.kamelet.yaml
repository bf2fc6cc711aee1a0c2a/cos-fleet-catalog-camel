apiVersion: camel.apache.org/v1alpha1
kind: Kamelet
metadata:
  name: cos-postgresql-sink
  annotations:
    camel.apache.org/provider: "Red Hat"
    camel.apache.org/kamelet.version: "${cos.kamelets.version}"
  labels:
    camel.apache.org/kamelet.type: "sink"
spec:
  definition:
    title: "PostgreSQL Sink"
    description: |-
      Send data to a PostgreSQL Database.

      This Kamelet expects a JSON-formatted body. Use key:value pairs to map the JSON fields and parameters. For example, here is a query:

      'INSERT INTO accounts (username,city) VALUES (:#username,:#city)'

      Here is example input for the example query:

      '{ "username":"oscerd", "city":"Rome"}'
    required:
      - serverName
      - username
      - password
      - query
      - databaseName
    type: object
    properties:
      serverName:
        title: Server Name
        description: The server name for the data source.
        type: string
        example: localhost
      serverPort:
        title: Server Port
        description: The server port for the data source.
        type: string
        default: 5432
      username:
        title: Username
        description: The username to access a secured PostgreSQL Database.
        type: string
        x-descriptors:
        - urn:camel:group:credentials
      password:
        title: Password
        description: The password to access a secured PostgreSQL Database.
        type: string
        format: password
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:password
        - urn:camel:group:credentials
      query:
        title: Query
        description: The query to execute against the PostgreSQL Database.
        type: string
        example: 'INSERT INTO accounts (username,city) VALUES (:#username,:#city)'
      databaseName:
        title: Database Name
        description: The name of the PostgreSQL Database.
        type: string
  types:
    in:
      mediaType: application/json
  dependencies:
  - "camel:jackson"
  - "camel:kamelet"
  - "camel:sql"
  template:
    beans:
      - name: dsBean
        type: "#class:org.apache.commons.dbcp2.BasicDataSource"
        property:
          - key: username
            value: '{{username}}'
          - key: password
            value: '{{password}}'
          - key: url
            value: 'jdbc:postgresql://{{serverName}}:{{serverPort}}/{{databaseName}}'
          - key: driverClassName
            value: 'org.postgresql.Driver'
    from:
      uri: "kamelet:source"
      steps:
      - unmarshal:
          json:
            library: Jackson
      - to:
          uri: "sql:{{query}}"
          parameters:
            dataSource: "#bean:{{dsBean}}"
