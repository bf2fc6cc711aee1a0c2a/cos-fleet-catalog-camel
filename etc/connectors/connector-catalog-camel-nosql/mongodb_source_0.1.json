{
  "connector_type" : {
    "json_schema" : {
      "type" : "object",
      "properties" : {
        "connector" : {
          "type" : "object",
          "title" : "MongoDB Source",
          "required" : [ "hosts", "collection", "database" ],
          "properties" : {
            "hosts" : {
              "title" : "MongoDB Hosts",
              "description" : "Comma separated list of MongoDB Host Addresses in host:port format.",
              "type" : "string"
            },
            "collection" : {
              "title" : "MongoDB Collection",
              "description" : "Sets the name of the MongoDB collection to bind to this endpoint.",
              "type" : "string"
            },
            "password" : {
              "title" : "MongoDB Password",
              "oneOf" : [ {
                "title" : "MongoDB Password",
                "description" : "User password for accessing MongoDB.",
                "type" : "string",
                "format" : "password"
              }, {
                "description" : "An opaque reference to the password",
                "type" : "object",
                "properties" : { }
              } ]
            },
            "username" : {
              "title" : "MongoDB Username",
              "description" : "Username for accessing MongoDB. The username must be present in the MongoDB's authentication database (authenticationDatabase). By default, the MongoDB authenticationDatabase is 'admin'.",
              "type" : "string"
            },
            "database" : {
              "title" : "MongoDB Database",
              "description" : "Sets the name of the MongoDB database to target.",
              "type" : "string"
            },
            "persistentTailTracking" : {
              "title" : "MongoDB Persistent Tail Tracking",
              "description" : "Enable persistent tail tracking, which is a mechanism to keep track of the last consumed message across system restarts. The next time the system is up, the endpoint will recover the cursor from the point where it last stopped slurping records.",
              "type" : "boolean",
              "default" : false
            },
            "tailTrackIncreasingField" : {
              "title" : "MongoDB Tail Track Increasing Field",
              "description" : "Correlation field in the incoming record which is of increasing nature and will be used to position the tailing cursor every time it is generated.",
              "type" : "string"
            }
          }
        },
        "kafka" : {
          "type" : "object",
          "title" : "Managed Kafka Sink",
          "required" : [ "topic" ],
          "properties" : {
            "topic" : {
              "title" : "Topic Names",
              "description" : "Comma separated list of Kafka topic names",
              "type" : "string"
            }
          }
        },
        "steps" : {
          "type" : "array",
          "items" : {
            "oneOf" : [ {
              "type" : "object",
              "required" : [ "insert-field" ],
              "properties" : {
                "insert-field" : {
                  "title" : "Insert Field Action",
                  "description" : "Adds a custom field with a simple language parsed value to the message in transit.\n\nThe extract field action expected an application/json content type. \n\nIf for example you have an array like '{ \"foo\":\"John\", \"bar\":30 }' and your action has been configured with field as 'element' and value as 'hello', you'll get '{ \"foo\":\"John\", \"bar\":30, \"element\":\"hello\" }'",
                  "required" : [ "field", "value" ],
                  "properties" : {
                    "field" : {
                      "title" : "Field",
                      "description" : "The name of the field to be added",
                      "type" : "string"
                    },
                    "value" : {
                      "title" : "Value",
                      "description" : "The value of the field",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "extract-field" ],
              "properties" : {
                "extract-field" : {
                  "title" : "Extract Field Action",
                  "description" : "Extract a field from the message body.\n\nThe extract field action expects an application/json content type. \n\nThe field parameter allows you to specify which field of the json the user wants to extract. By default the message body will be overriden with the extracted field.\n\nThe optional parameter headerOutput allows the user to specify wheter the extracted field should be stored in a message header named 'CamelKameletsExtractFieldName', leaving the message body untouched.\n\nThe optional parameter headerOutputName allows the user to specify a custom header name instead of the default 'CamelKameletsExtractFieldName'. This parameter must be used in conjunction with headerOutput. \nIf no headerOutputName parameter will be provided, the default 'CamelKameletsExtractFieldName' will be used.\n\nThe optional parameter strictHeaderCheck allows to user to enable a strict header name check. If enabled the action will check if the header output name (custom or default) has been used already in the     exchange. If so, the extracted field will be stored in the message body, if not, the extracted field will be stored in the selected header (custom or default).\n\nThe headerOutput/headerOutputName/strictHeaderCheck parameters are particulary useful in case you would like to reuse an extracted field as parameter for another header, for example.",
                  "required" : [ "field" ],
                  "properties" : {
                    "field" : {
                      "title" : "Field",
                      "description" : "The name of the field to extract",
                      "type" : "string"
                    },
                    "headerOutput" : {
                      "title" : "Header Output",
                      "description" : "If enable the action will store the extracted field in an header named CamelKameletsExtractFieldName",
                      "type" : "boolean",
                      "default" : false,
                      "x-descriptors" : [ "urn:alm:descriptor:com.tectonic.ui:checkbox" ]
                    },
                    "headerOutputName" : {
                      "title" : "Header Output Name",
                      "description" : "A custom name for the header containing the extracted field",
                      "default" : "none",
                      "type" : "string"
                    },
                    "strictHeaderCheck" : {
                      "title" : "Strict Header Check",
                      "description" : "If enabled the action will check if the header output name (custom or default) has been used already in the exchange. If so, the extracted field will be stored in the message body, if not, the extracted field will be stored in the selected header (custom or default).",
                      "type" : "boolean",
                      "default" : false,
                      "x-descriptors" : [ "urn:alm:descriptor:com.tectonic.ui:checkbox" ]
                    }
                  },
                  "type" : "object"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "has-header-filter" ],
              "properties" : {
                "has-header-filter" : {
                  "title" : "Has Header Filter Action",
                  "description" : "Filter message based on the presence of one header",
                  "required" : [ "name" ],
                  "properties" : {
                    "name" : {
                      "title" : "Header Name",
                      "description" : "The header name to evaluate",
                      "type" : "string",
                      "example" : "headerName"
                    },
                    "value" : {
                      "title" : "Header Value",
                      "description" : "An optional header value to compare the header to",
                      "type" : "string",
                      "example" : "headerValue"
                    }
                  },
                  "type" : "object"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "throttle" ],
              "properties" : {
                "throttle" : {
                  "title" : "Throttle Action",
                  "description" : "The Throttle action allows to ensure that a specific sink does not get overloaded.",
                  "required" : [ "messages" ],
                  "properties" : {
                    "messages" : {
                      "title" : "Messages Number",
                      "description" : "The number of messages to send in the time period set",
                      "type" : "integer",
                      "example" : 10
                    },
                    "timePeriod" : {
                      "title" : "Time Period",
                      "description" : "Sets the time period during which the maximum request count is valid for, in milliseconds",
                      "type" : "string",
                      "default" : "1000"
                    }
                  },
                  "type" : "object"
                }
              }
            } ]
          }
        }
      }
    },
    "id" : "mongodb_source_0.1",
    "kind" : "ConnectorType",
    "icon_href" : "TODO",
    "name" : "MongoDB Source",
    "description" : "MongoDB Source",
    "version" : "0.1",
    "labels" : [ "source" ],
    "channels" : [ "stable" ]
  },
  "channels" : {
    "stable" : {
      "shard_metadata" : {
        "connector_revision" : "6",
        "connector_type" : "source",
        "connector_image" : "quay.io/rhoas/cos-connector-mongodb-source:0.1.6",
        "operators" : [ {
          "type" : "camel-connector-operator",
          "version" : "[1.0.0,2.0.0)"
        } ],
        "kamelets" : {
          "connector" : "mongodb-source",
          "kafka" : "managed-kafka-sink",
          "insert-field" : "insert-field-action",
          "extract-field" : "extract-field-action",
          "has-header-filter" : "has-header-filter-action",
          "throttle" : "throttle-action"
        },
        "annotations" : {
          "trait.camel.apache.org/container.request-memory" : "256m",
          "trait.camel.apache.org/container.request-cpu" : "1"
        }
      }
    }
  }
}