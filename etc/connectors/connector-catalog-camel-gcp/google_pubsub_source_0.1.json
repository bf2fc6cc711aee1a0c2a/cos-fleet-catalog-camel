{
  "channels" : {
    "stable" : {
      "shard_metadata" : {
        "connector_revision" : "9",
        "connector_type" : "source",
        "connector_image" : "quay.io/rhoas/cos-connector-google-pubsub:0.1.9",
        "operators" : [ {
          "type" : "camel-connector-operator",
          "version" : "[1.0.0,2.0.0)"
        } ],
        "kamelets" : {
          "adapter" : {
            "name" : "google-pubsub-source",
            "prefix" : "gcp"
          },
          "kafka" : {
            "name" : "cos-kafka-sink",
            "prefix" : "kafka"
          },
          "processors" : {
            "throttle" : "throttle-action",
            "jsonpath_set" : "cos-jsonpath-set-action",
            "log" : "cos-log-action",
            "jsonpath_rename" : "cos-jsonpath-rename-action",
            "jsonpath_extract" : "cos-jsonpath-extract-action",
            "jsonpath_remove" : "cos-jsonpath-remove-action"
          }
        },
        "annotations" : {
          "trait.camel.apache.org/container.request-cpu" : "0.20",
          "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
        },
        "consumes" : "application/octet-stream",
        "produces" : "application/octet-stream"
      }
    }
  },
  "connector_type" : {
    "id" : "google_pubsub_source_0.1",
    "kind" : "ConnectorType",
    "icon_href" : "TODO",
    "name" : "Google Cloud Pubsub Source",
    "description" : "Google Cloud Pubsub Source",
    "version" : "0.1",
    "labels" : [ "source" ],
    "capabilities" : [ "data_shape", "error_handler", "processors" ],
    "channels" : [ "stable" ],
    "schema" : {
      "type" : "object",
      "additionalProperties" : false,
      "required" : [ "gcp_project_id", "gcp_subscription_name", "gcp_service_account_key", "kafka_topic" ],
      "properties" : {
        "gcp_project_id" : {
          "title" : "Project Id",
          "description" : "The Google Cloud PubSub Project Id",
          "type" : "string"
        },
        "gcp_subscription_name" : {
          "title" : "Subscription Name",
          "description" : "The Subscription Name",
          "type" : "string"
        },
        "gcp_service_account_key" : {
          "title" : "Service Account Key",
          "description" : "The Service account key that can be used as credentials for the PubSub publisher/subscriber",
          "type" : "binary",
          "x-group" : "credentials"
        },
        "gcp_synchronous_pull" : {
          "title" : "Synchronous Pull",
          "description" : "If Synchronously pull batches of messages is enabled or not",
          "type" : "boolean",
          "default" : false
        },
        "gcp_max_messages_per_poll" : {
          "title" : "Max Messages Per Poll",
          "description" : "The max number of messages to receive from the server in a single API call",
          "type" : "integer",
          "default" : 1
        },
        "gcp_concurrent_consumers" : {
          "title" : "Concurrent Consumers",
          "description" : "The number of parallel streams consuming from the subscription",
          "type" : "integer",
          "default" : 1
        },
        "kafka_topic" : {
          "title" : "Topic Names",
          "description" : "Comma separated list of Kafka topic names",
          "type" : "string"
        },
        "processors" : {
          "type" : "array",
          "items" : {
            "oneOf" : [ {
              "type" : "object",
              "required" : [ "throttle" ],
              "properties" : {
                "throttle" : {
                  "$ref" : "#/$defs/processors/throttle"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "log" ],
              "properties" : {
                "log" : {
                  "$ref" : "#/$defs/processors/log"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "jsonpath_extract" ],
              "properties" : {
                "jsonpath_extract" : {
                  "$ref" : "#/$defs/processors/jsonpath_extract"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "jsonpath_remove" ],
              "properties" : {
                "jsonpath_remove" : {
                  "$ref" : "#/$defs/processors/jsonpath_remove"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "jsonpath_rename" ],
              "properties" : {
                "jsonpath_rename" : {
                  "$ref" : "#/$defs/processors/jsonpath_rename"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "jsonpath_set" ],
              "properties" : {
                "jsonpath_set" : {
                  "$ref" : "#/$defs/processors/jsonpath_set"
                }
              }
            } ]
          }
        },
        "data_shape" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "produces" : {
              "$ref" : "#/$defs/data_shape/produces"
            }
          }
        },
        "error_handler" : {
          "type" : "object",
          "oneOf" : [ {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "dead_letter_queue" ],
            "properties" : {
              "dead_letter_queue" : {
                "$ref" : "#/$defs/error_handler/dead_letter_queue"
              }
            }
          }, {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "log" ],
            "properties" : {
              "log" : {
                "$ref" : "#/$defs/error_handler/log"
              }
            }
          }, {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "stop" ],
            "properties" : {
              "stop" : {
                "$ref" : "#/$defs/error_handler/stop"
              }
            }
          } ]
        }
      },
      "$defs" : {
        "processors" : {
          "throttle" : {
            "title" : "Throttle Action",
            "description" : "The Throttle action allows to ensure that a specific sink does not get overloaded.",
            "required" : [ "messages" ],
            "properties" : {
              "messages" : {
                "title" : "Messages Number",
                "description" : "The number of messages to send in the time period set",
                "type" : "integer",
                "example" : 10
              },
              "timePeriod" : {
                "title" : "Time Period",
                "description" : "Sets the time period during which the maximum request count is valid for, in milliseconds",
                "type" : "string",
                "default" : "1000"
              }
            },
            "type" : "object"
          },
          "log" : {
            "title" : "Log",
            "description" : "Log payload.",
            "type" : "object",
            "properties" : {
              "multiLine" : {
                "title" : "Multi Line",
                "description" : "Multi Line",
                "type" : "boolean",
                "default" : false,
                "x-descriptors" : [ "urn:camel:group:common" ]
              },
              "showProperties" : {
                "title" : "Show Properties",
                "description" : "Show Properties",
                "type" : "boolean",
                "default" : false,
                "x-descriptors" : [ "urn:camel:group:common" ]
              },
              "showHeaders" : {
                "title" : "Show Headers",
                "description" : "Show Headers",
                "type" : "boolean",
                "default" : false,
                "x-descriptors" : [ "urn:camel:group:common" ]
              }
            }
          },
          "jsonpath_extract" : {
            "title" : "Transform with JsonPath",
            "description" : "TBD",
            "type" : "object",
            "required" : [ "expression" ],
            "properties" : {
              "expression" : {
                "title" : "Expression",
                "description" : "Expression",
                "type" : "string"
              }
            },
            "x-metadata" : {
              "supported.content-type" : "application/x-struct"
            }
          },
          "jsonpath_remove" : {
            "title" : "Transform with JsonPath",
            "description" : "TBD",
            "type" : "object",
            "required" : [ "expression" ],
            "properties" : {
              "expression" : {
                "title" : "Expression",
                "description" : "Expression",
                "type" : "string"
              }
            },
            "x-metadata" : {
              "supported.content-type" : "application/x-struct"
            }
          },
          "jsonpath_rename" : {
            "title" : "Transform with JsonPath",
            "description" : "TBD",
            "type" : "object",
            "required" : [ "expression" ],
            "properties" : {
              "expression" : {
                "title" : "Expression",
                "description" : "Expression",
                "type" : "string"
              },
              "key" : {
                "title" : "Key",
                "description" : "Key",
                "type" : "string"
              },
              "newKey" : {
                "title" : "NewKey",
                "description" : "NewKey",
                "type" : "string"
              }
            },
            "x-metadata" : {
              "supported.content-type" : "application/x-struct"
            }
          },
          "jsonpath_set" : {
            "title" : "Transform with JsonPath",
            "description" : "TBD",
            "type" : "object",
            "required" : [ "expression" ],
            "properties" : {
              "expression" : {
                "title" : "Expression",
                "description" : "Expression",
                "type" : "string"
              },
              "key" : {
                "title" : "Key",
                "description" : "Key",
                "type" : "string"
              },
              "value" : {
                "title" : "Value",
                "description" : "Value",
                "type" : "string"
              }
            },
            "x-metadata" : {
              "supported.content-type" : "application/x-struct"
            }
          }
        },
        "data_shape" : {
          "produces" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "format" ],
            "properties" : {
              "format" : {
                "type" : "string",
                "default" : "application/octet-stream",
                "enum" : [ "application/octet-stream" ]
              }
            }
          }
        },
        "error_handler" : {
          "dead_letter_queue" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "topic" ],
            "properties" : {
              "topic" : {
                "type" : "string",
                "title" : "Dead Letter Topic Name",
                "description" : "The name of the Kafka topic used as dead letter queue"
              }
            }
          },
          "log" : {
            "type" : "object",
            "additionalProperties" : false
          },
          "stop" : {
            "type" : "object",
            "additionalProperties" : false
          }
        }
      }
    }
  }
}